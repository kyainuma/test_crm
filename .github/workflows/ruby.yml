# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: RailsTest
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_USERNAME: dbuser
          MYSQL_ROOT_PASSWORD: dbpass
    container:
      image: ruby:2.7.3
      env:
        RAILS_ENV: test
        MYSQL_HOST: db
        MYSQL_USERNAME: dbuser
        MYSQL_ROOT_PASSWORD: dbpass
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-${{ hashFiles('**/Gemfile.lock') }}
    - uses: actions/cache@v1
      with:
        path: node_modules
        key: yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Setup yarn and node
      run: |
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
        apt-get update -qq
        apt-get install -y nodejs yarn
        yarn install
    - name: Setup Chrome Driver
      run: |
        curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE
        wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
        unzip ~/chromedriver_linux64.zip -d ~/
        rm ~/chromedriver_linux64.zip
        mv ~/chromedriver /usr/bin/chromedriver
        sh -c 'wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
        sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        apt-get update --fix-missing && apt-get install -y google-chrome-stable
    - name: Setup bundles
      run: bundle install
    - name: Setup Database
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
    - name: Run RSpec
      run: |
        bundle exec rails rspec
    - name: Run RuboCop
      run: |
        bundle exec rails rubocop
